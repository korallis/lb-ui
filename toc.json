{"parse":{"title":"TOC format","pageid":122814,"wikitext":"{{uitech}} {{tocright}}\n<code>.toc</code> files contain information about the addon (e.g. addon name, addon description, addon saved variables). They also specify the loading order for the addon's <code>.lua</code> and <code>.xml</code> files. A <code>.toc</code> file is mandatory for an addon. The filename of the <code>.toc</code> file must match the folder it's inside, otherwise the <code>.toc</code> file won't load.\n\n== Rules ==\nThe <code>.toc</code> file and folder name must match. For example <code>..\\Interface\\AddOns\\MyAddon\\MyAddon.toc</code>\n\nThe <code>.toc</code> file can optionally have the following elements:\n* Metadata as <syntaxhighlight lang=\"wowtoc\" inline>## Directive: Value</syntaxhighlight>\n* Comments as <syntaxhighlight lang=\"wowtoc\" inline># this is a comment</syntaxhighlight>\n* A list of files as <code>myFile.xml</code> or <code>subfolder\\myFile.lua</code>\n\nWhitespace before <code>#</code> will be interpreted as the start of a filename.  However, the client trims whitespace around metadata values (after the colon).\n\nBackslashes <code>\\</code> are recommended instead of forward slashes for paths to prevent issues with <code>{{api|t=x|Include}}</code> tags.\n\nExample <code>.toc</code> file:\n\n{{#tag:syntaxhighlight|\n## Interface: {{API LatestInterface}}\n## Title: MyAddonName\n## Notes: Brief description about what MyAddonName does to help people find it\n## Version: 1.0.0\n\n# This line is a comment\n\nMyFrame.xml\nMyCode.lua\nlib\\MyCode.lua\nanotherfolder\\MoreCode.xml\n|lang=\"wowtoc\"}}\n\n\n== File loading order == \n\nThe <code>.toc</code> file includes a list of files to be loaded. The files are loaded in order, from top to bottom.\n\nNot every file in your addon must appear in the <code>.toc</code> file. This is because <code>.xml</code> files can load files using <code>{{api|t=x/|Script file.AnotherFile&#46;lua}}</code> or <code>{{api|t=x/|Include file.alsoLoadThis&#46;xml}}</code>. Also, functions such as <code>{{api|t=w|Texture:SetTexture}}()</code> and <code>{{api|PlaySoundFile}}()</code> can specify image files and sound files contained within the addon folder and subfolders.\n\n== Interface version ==\n\"Interface\" is the WoW version the addon was made for. WoW uses this number to tell if an addon is out of date.\n\nIf an addon has an older interface version than the user's current WoW client version, the addon is classified as out of date. If you don't specify an Interface version, WoW will always treat the addon as out of date.\n\nIf the game version is 10.2.7, then the interface version is 100207:\n\n    {{#tag:syntaxhighlight|## Interface: 100207|lang=\"wowtoc\"}}\n\nFor addons that support multiple client flavors with one TOC file, multiple interface versions can be specified delimited by commas:\n\n    {{#tag:syntaxhighlight|## Interface: {{API LatestInterface}}, {{API LatestInterface|classic}}, {{API LatestInterface|vanilla}}|lang=\"wowtoc\"}}\n\n=== Determining the interface version ===\n\n==== GetBuildInfo ====\nType <code>/dump (select(4, GetBuildInfo()))</code> in the chat box. This example shows the interface version during 9.2.7.\n\n[[File:GetBuildInfo-Tutorial.gif|alt=Enter the text \"/dump select(4, GetBuildInfo())\" into the chat window to display the Interface version|left|Demonstration of obtaining the Interface version from the chat window.]]\n{{clrl}}\n\n==== {{SITENAME}} ====\nThis wiki maintains a template of the [[Template:API LatestInterface|latest interfaces]] for each flavor of the game. A table of its values is shown below (these values are updated by contributors, so they may be out of date).\n{| class=\"darktable zebra col2-left\" style=\"text-align:center;\"\n! colspan=2 | Client !! Interface\n|-\n| {{LatestPatchInfo|icon=test}} || Mainline Test || {{LatestPatchInfo|interface=test}}\n|-\n| {{LatestPatchInfo|icon=mainline}} || Mainline || {{LatestPatchInfo|interface=mainline}}\n|-\n| {{LatestPatchInfo|icon=classic-beta}} || Classic Beta || {{LatestPatchInfo|interface=classic-beta}}\n|-\n| {{LatestPatchInfo|icon=classic-test}} || Classic Test || {{LatestPatchInfo|interface=classic-test}}\n|-\n| {{LatestPatchInfo|icon=classic}} || Classic || {{LatestPatchInfo|interface=classic}}\n|-\n| {{LatestPatchInfo|icon=classic-china}} || Classic (China) || {{LatestPatchInfo|interface=classic-china}}\n|-\n| {{LatestPatchInfo|icon=mists}} || Mists || {{LatestPatchInfo|interface=mists}}\n|-\n| {{LatestPatchInfo|icon=cata}} || Cata || {{LatestPatchInfo|interface=cata}}\n|-\n| {{LatestPatchInfo|icon=tbc}} || TBC || {{LatestPatchInfo|interface=tbc}}\n|-\n| {{LatestPatchInfo|icon=vanilla-test}} || Vanilla Test || {{LatestPatchInfo|interface=vanilla-test}}\n|-\n| {{LatestPatchInfo|icon=vanilla}} || Vanilla || {{LatestPatchInfo|interface=vanilla}}\n|}\n\n== Per-file conditions and variables ==\nTOC files support the use of variable expansions and conditional loading directives within parts of the file listing.\n\n=== Conditions ===\n\nLoading conditions of the form <span class=\"apitype\">[Directive value...]</span> can be used within file references. The following conditions are supported:\n\n{| class=\"darktable zebra\"\n! Condition !! Description !! Client version\n|-\n| <span class=\"apitype\">[AllowLoad ...]</span> || Restricts a file to loading only under the in-game or glue screen environments. Functionally inoperable for addons, as only Blizzard code can load in the glue screen environment. ||\n|-\n| <span class=\"apitype\">[AllowLoadGameType ...]</span> || Restricts a file to only loading under specific game types or client flavors. Multiple flavors are supported delimited by commas, with the same values used by the AllowLoadGameType TOC directive. || Added in 11.1.5\n|-\n| <span class=\"apitype\">[AllowLoadTextLocale ...]</span> || Restricts a file to only loading under specific client text locales. Multiple locale names are supported delimited by commas using the same four letter locale names as returned by {{api|t=a|GetLocale}}, eg. \"enUS\" and \"frFR\". || Added in 11.2.0.61787\n|}\n\nConditions can appear anywhere in a line, but for reasons of compatibility should generally only ever be used at the end of a line as follows.\n\n{{#tag:syntaxhighlight|\n## Interface: {{API LatestInterface}}\n## Title: My Cool Addon\n\n# This will only be loaded on Mainline.\nMainlineOnly.lua [AllowLoadGameType mainline]\n\n# This will only be loaded in Vanilla or TBC.\nVanillaOrTBC.lua [AllowLoadGameType vanilla, tbc]\n\n# This will only be loaded under English or French client locales.\nEnglishOrFrenchOnly [AllowLoadTextLocale enUS, frFR]\n|lang=\"wowtoc\"}}\n\n=== Variables ===\n\nVariables of the form <span class=\"apitype\">[Variable]</span> can be used within file references. The following variables are currently supported by the client.\n\n{| class=\"darktable zebra\"\n! Variable !! Description !! Client version\n|-\n| <span class=\"apitype\">[Family]</span> || Expands out to either <span class=\"apitype\">Mainline</span> or <span class=\"apitype\">Classic</span> based upon the current active game type. || Added in 11.1.5\n|-\n| <span class=\"apitype\">[Game]</span> || Expands out to either <span class=\"apitype\">Standard</span>, <span class=\"apitype\">Vanilla</span>, <span class=\"apitype\">TBC</span>, <span class=\"apitype\">Wrath</span>, <span class=\"apitype\">Cata</span>, or <span class=\"apitype\">Mists</span> based upon the current active game type. || Added in 11.1.5\n|-\n| <span class=\"apitype\">[TextLocale]</span> || Expands out to either <span class=\"apitype\">enUS</span>, <span class=\"apitype\">deDE</span>, <span class=\"apitype\">frFR</span>, etc. based upon the configured text locale of the game client. || Added in 11.2.0.61787\n|}\n\n\n{{#tag:syntaxhighlight|\n## Interface: {{API LatestInterface}}\n## Title: My Cool Addon\n\n# This will load \"Mainline\\File.lua\" or \"Classic\\File.lua\"\n# as appropriate for the current client.\n[Family]\\File.lua\n\n# This will load \"Standard\\File.lua\", \"Mists\\File.lua\", \"Cata\\File.lua\", ...\n# as appropriate for the current client.\n[Game]\\File.lua\n\n# This will load \"Localization\\enUS.lua\", \"Localization\\frFR.lua\", ...\n# as appropriate for the current client text locale.\nLocalization\\[TextLocale].lua\n|lang=\"wowtoc\"}}\n\n== Client-specific TOC files ==\nAddons can ship multiple <code>.toc</code> files with different filename suffixes tailored for individual clients.<ref name=\"WoWUIBug#68\"/> The WoW client first searches for the special file names as shown below, and if none are found, uses <code>AddonName.toc</code>\n\nNote that comma-delimited interface versions or per-file conditional loading directives should be preferred over the use of client-specific TOC files where possible.\n\n{| class=\"darktable zebra col2-center\"\n! Game Type !! colspan=2 | Expansion/Mode !! Suffix\n|-\n| <code>standard</code> || {{LatestPatchInfo|icon=mainline}} || {{LatestPatchInfo|expansion=mainline}} excluding Plunderstorm || <code>AddonName<span class=\"apitype\">_Standard</span>.toc</code>\n|-\n| <code>mists</code> || {{mop-inline|classic=}} || [[Mists of Pandaria Classic]] || <code>AddonName<span class=\"apitype\">_Mists</span>.toc</code>\n|-\n| <code>cata</code> || {{cata-inline|classic=}} || [[Cataclysm Classic]] || <code>AddonName<span class=\"apitype\">_Cata</span>.toc</code>\n|-\n| <code>wrath</code> || {{wotlk-inline|classic=}} || [[Wrath of the Lich King Classic]] || <code>AddonName<span class=\"apitype\">_Wrath</span>.toc</code>\n|-\n| <code>tbc</code> || {{bc-inline|classic=}} || [[Burning Crusade Classic]] || <code>AddonName<span class=\"apitype\">_TBC</span>.toc</code>\n|-\n| <code>vanilla</code> || {{wow-inline|classic=}} || [[Classic Era]] || <code>AddonName<span class=\"apitype\">_Vanilla</span>.toc</code>\n|-\n| <code>plunderstorm</code> || {{LatestPatchInfo|icon=mainline}} || [[Plunderstorm]] || <code>AddonName<span class=\"apitype\">_WoWLabs</span>.toc</code>\n|-\n| <code>mainline</code> || {{LatestPatchInfo|icon=mainline}} || {{LatestPatchInfo|expansion=mainline}} including Plunderstorm || <code>AddonName<span class=\"apitype\">_Mainline</span>.toc</code>\n|-\n| <code>classic</code> || || All classic expansions || <code>AddonName<span class=\"apitype\">_Classic</span>.toc</code>\n|}\n\n* Clients also recognize legacy suffixes <code>-WOTLKC</code> and <code>-BCC</code>.\n* The <code>_Mainline</code> and <code>_Classic</code> suffixes have a lower priority than other suffixes that target specific expasions/modes. For example, having both a <code>_Cata.toc</code> and <code>_Classic.toc</code> file will result in the former being used on Cataclysm Classic clients, and the latter in all other Classic clients.\n\n== AddOns list formatting ==\nThe following directives change how an AddOn appears in the AddOns list.  Both may be coloured using [[UI escape sequences]] (e.g. <code>|c########|r</code>), or [[Localization|localized]] by appending a hyphen and the locale code (e.g.<code>Title-enGB</code>).  Later entries overwrite earlier ones, so the non-localized fallback should go first.\n\n===Title===\n<div style=\"margin-left:2em\">Name displayed in the AddOns list.\n<syntaxhighlight lang=\"wowtoc\">\n## Title: Waiting for Godot\n## Title-frFR: En attendant Godot\n</syntaxhighlight>\n</div>\n\n===Notes===\n<div style=\"margin-left:2em\">Tooltip displayed in the AddOns list.\n<syntaxhighlight lang=\"wowtoc\">\n## Notes: This word is |cFFFF0000red|r\n</syntaxhighlight>\n</div>\n\n===Category===\n<div style=\"margin-left:2em\">Category name displayed in the AddOns list, displayed as a collapsible header entry.\nIt is '''strongly recommended''' that you stick to the translated category names found on the [[Addon Categories]] page. This will ensure that your addon is consistently located with other addons in the same category across all locales.\n<syntaxhighlight lang=\"wowtoc\">\n## Category: This is a test\n## Category-deDE: Dies ist ein Test\n</syntaxhighlight>\n</div>\n\n===Group===\n<div style=\"margin-left:2em\">Addon used for grouping entries together in the AddOns list.\n\n* The Group value must be the name of the main addon.\n* Grouped addons are displayed in the addon list as indented sub-lists. These lists cannot be collapsed, unlike Categories.\n** Nested groups are not supported by the addon list.\n* If no Group has been manually specified, the client will attempt to automatically deduce membership of a group.\n** Installed addons will be scanned to locate pairs of addons where the base name of one addon is a complete prefix of another, and where any form of dependency relation exists between the two in either direction.\n\n<syntaxhighlight lang=\"wowtoc\">\n## Group: FooAuras\n</syntaxhighlight>\n</div>\n\n===IconTexture===\n<div style=\"margin-left:2em\">Path to a texture file to be shown as the icon for this addon in the addon list. Optional.\n<syntaxhighlight lang=\"wowtoc\">\n## IconTexture: Interface\\Icons\\TEMP\n</syntaxhighlight>\n</div>\n\n===IconAtlas===\n<div style=\"margin-left:2em\">Name of a texture atlas to be shown as the icon for this addon in the addon list. Optional, and has a lower priority than IconTexture if both are set.\n<syntaxhighlight lang=\"wowtoc\">\n## IconAtlas: TaskPOI-Icon\n</syntaxhighlight>\n</div>\n\n==Addon compartment integration==\n{{Df-inline}} The following directives will control the registration of the addon into the [[Addon compartment]] dropdown accessible from the minimap.\n\n===AddonCompartmentFunc===\n<div style=\"margin-left:2em\">Name of a global function to be executed when the dropdown list button for this addon has been clicked. This field is required to have the addon be shown in the Addon Compartment list.\n<syntaxhighlight lang=\"wowtoc\">\n## AddonCompartmentFunc: MyAddon_OnAddonCompartmentClick\n</syntaxhighlight>\n</div>\n\n===AddonCompartmentFuncOnEnter===\n<div style=\"margin-left:2em\">Name of a global function to be executed when this dropdown list button for this addon has been highlighted. Optional.\n<syntaxhighlight lang=\"wowtoc\">\n## AddonCompartmentFuncOnEnter: MyAddon_OnAddonCompartmentEnter\n</syntaxhighlight>\n</div>\n\n===AddonCompartmentFuncOnLeave===\n<div style=\"margin-left:2em\">Name of a global function to be executed when this dropdown list button for this addon is no longer highlighted. Optional.\n<syntaxhighlight lang=\"wowtoc\">\n## AddonCompartmentFuncOnLeave: MyAddon_OnAddonCompartmentLeave\n</syntaxhighlight>\n</div>\n\n== Loading conditions ==\nThe following directives control when an AddOn loads, and any dependencies that must or may load first.\n\n===LoadOnDemand===\n<div style=\"margin-left:2em\"><code>1</code> to delay loading until <code>{{api|LoadAddOn}}()</code>.\n<syntaxhighlight lang=\"wowtoc\">\n## LoadOnDemand: 1\n</syntaxhighlight>\n</div>\n\n===Dependencies===\n<div style=\"margin-left:2em\">AddOns that must load first.  Aliases include <code>RequiredDeps</code> and any word beginning with <code>Dep</code>.\n<syntaxhighlight lang=\"wowtoc\">\n## Dependencies: someAddOn, someOtherAddOn\n</syntaxhighlight>\n</div>\n\n===OptionalDeps===\n<div style=\"margin-left:2em\">AddOns that should load first if available.\n<syntaxhighlight lang=\"wowtoc\">\n## OptionalDeps: someAddOn, someOtherAddOn\n</syntaxhighlight>\n</div>\n\n===LoadWith===\n<div style=\"margin-left:2em\">AddOns that, once loaded, trigger this one to load. Implies ''LoadOnDemand''. \n<syntaxhighlight lang=\"wowtoc\">\n## LoadWith: someAddOn, someOtherAddOn\n</syntaxhighlight>\n</div>\n\n===LoadManagers===\n<div style=\"margin-left:2em\">AddOns that, if present, trigger this one to behave as ''LoadOnDemand''.  See [[AddonLoader]] for an example.\n<syntaxhighlight lang=\"wowtoc\">\n## LoadManagers: someAddOn, someOtherAddOn\n</syntaxhighlight>\n</div>\n\n===AllowLoadGameType===\n<div style=\"margin-left:2em\">\nRestricts loading this addon to specific client flavors. Multiple values may be supplied, delimited by commas. Note that game modes may be restricted to disallow loading of insecure addons.\n\n{| class=\"darktable zebra col2-center\"\n! Game Type !! colspan=2 | Expansion/Mode\n|-\n| <code>standard</code> || {{LatestPatchInfo|icon=mainline}} || {{LatestPatchInfo|expansion=mainline}} excluding Plunderstorm\n|-\n| <code>mists</code> || {{mop-inline}} || [[Mists of Pandaria Classic]]\n|-\n| <code>cata</code> || {{cata-inline}} || [[Cataclysm Classic]]\n|-\n| <code>wrath</code> || {{wotlk-inline}} || [[Wrath of the Lich King Classic]]\n|-\n| <code>tbc</code> || {{bc-inline}} || [[Burning Crusade Classic]]\n|-\n| <code>vanilla</code> || {{wow-inline}} || [[Classic Era]]\n|-\n| <code>plunderstorm</code> || {{LatestPatchInfo|icon=mainline}} || [[Plunderstorm]]\n|-\n| <code>mainline</code> || {{LatestPatchInfo|icon=mainline}} || {{LatestPatchInfo|expansion=mainline}} including Plunderstorm\n|-\n| <code>classic</code> || || All classic expansions\n|}\n</div>\n\n===OnlyBetaAndPTR===\n<div style=\"margin-left:2em\">\n<code>1</code> if an addon should only be loadable in Beta or PTR clients.\n<syntaxhighlight lang=\"wowtoc\">\n## OnlyBetaAndPTR: 1\n</syntaxhighlight>\n</div>\n</div>\n\n===DefaultState===\n<div style=\"margin-left:2em\"><code>disabled</code> to require the user to explicitly enable the AddOn in the AddOns list.\n<syntaxhighlight lang=\"wowtoc\">\n## DefaultState: disabled\n</syntaxhighlight>\n</div>\n\n== Saved variables ==\n{{main|Saving variables between game sessions}}\n\n===LoadSavedVariablesFirst===\n<div style=\"margin-left:2em\">\n<code>1</code> if SavedVariables file(s) should be loaded before all script files for this addon.\n</div>\n\n===SavedVariables===\n<div style=\"margin-left:2em\">Variables saved in <code>WTF/[account]/SavedVariables</code>.\n<syntaxhighlight lang=\"wowtoc\">\n## SavedVariables: MyAddOnNameFoo, MyAddOnNameBar\n</syntaxhighlight>\n</div>\n\n===SavedVariablesPerCharacter===\n<div style=\"margin-left:2em\">Variables saved in <code>WTF/[account]/[server]/[character]/SavedVariables</code>.\n<syntaxhighlight lang=\"wowtoc\">\n## SavedVariablesPerCharacter: MyAddOnNameAnotherVariable\n</syntaxhighlight>\n</div>\n\n== Informational ==\nThe following metadata may be accessed using {{api|GetAddOnMetadata}}().\n\n; Author : The AddOn author's name, displayed\n; Version: The AddOn version. Some automatic updating tools may prefer that this string begins with a numeric version number.\n; X-_____: Any custom metadata prefixed by \"X-\", such as \"X-Date\", \"X-Website\" or \"X-Feedback\"\n\n== Uncategorized ==\n\n===AllowAddOnTableAccess===\n<div style=\"margin-left:2em\"><code>1</code> to allow the retrieval of the [[Using the AddOn namespace|namespace table]] of this addon via {{api|t=a|C_AddOns.GetLocalAddOnTable}}.\n<syntaxhighlight lang=\"wowtoc\">\n## AllowAddOnTableAccess: 1\n</syntaxhighlight>\n</div>\n\n== Restricted ==\nThe following tags are inaccessible to third-party AddOns.\n\n===AllowLoad===\n<div style=\"margin-left:2em\">\nRestricts loading this addon to either the [[API IsOnGlueScreen|GlueXML]] or [[FrameXML]] environments.\n\n{| class=\"darktable zebra\"\n! Value !! Environment\n|-\n| <code>Both</code> || Allow this addon to load without restriction in all environments.\n|-\n| <code>Game</code> || Only load this addon in the FrameXML environment.\n|-\n| <code>Glue</code> || Only load this addon in the GlueXML environment.\n|}\n</div>\n\n===EscalateErrorDuringLoad===\n<div style=\"margin-left:2em\">\nBoolean directive that appears to have no effect in public clients.\n</div>\n\n===LoadFirst=== \n<div style=\"margin-left:2em\">\n<code>1</code> if a secure addon is not permitted to be disabled and should be loaded before any other addons without this flag.\n</div>\n\n===SavedVariablesMachine===\n<div style=\"margin-left:2em\">\nList of global variable names to be persisted across all accounts on the same machine.\n</div>\n\n===UseSecureEnvironment===\n<div style=\"margin-left:2em\">\n<code>1</code> if all files present in an addon should be loaded into a private function environment.\n</div>\n\n== Details ==\n* WoW reads up to the first 1024 characters of each line only. Additional characters are ignored and do not cause an error.\n* Starting from Patch 9.0, 1.14.0 and 2.5.3, newly created/added files and even complete addons, are also detected when doing a <code>/reload</code> after the game started.\n\n== Patch changes ==\n===<font color=\"#4ec9b0\">Retail</font>===\n* {{Patch 11.2.0|note=Added the inline TextLocale variable and AllowLoadTextLocale conditional directive.}}\n* {{Patch 11.1.7|note=Added the AllowAddOnTableAccess field.}}\n* {{Patch 11.1.5|note=Added support for per-file directives and variables. Added the LoadSavedVariablesFirst field. AllowLoadByGameType is now usable by insecure addons.}}\n* {{Patch 11.1.0|note=Added the Category and Group fields.}}\n* {{Patch 11.0.0|note=Added the restricted UseSecureEnvironment metadata field. Removed the SuppressLocalTableRef metadata field.}}\n* {{Patch 10.2.7|note=Added support for comma-delimited Interface versions, and the restricted AllowLoadGameType and SuppressLocalTableRef metadata fields. Renamed AllowLoadByGameMode to AllowLoadGameType, and GuardedAddOn to LoadFirst.}}\n* {{Patch 10.2.6|note=Added the restricted AllowLoadByGameMode metadata field.}}\n* {{Patch 10.1.0|note=Added IconAtlas, IconTexture, and [[Addon compartment]] related metadata fields. Added the restricted GuardedAddOn metadata field.}}\n* {{Patch 9.1.0|note=Multiple TOC files are now supported using a suffix to disambiguate Classic, BCC and Retail.<ref name=\"WoWUIBug#68\">{{Ref web|author=Meo[[File:Inv g fishingbobber 05.png|12px]]rawr|url=https://github.com/Stanzilla/WoWUIBugs/issues/68#issuecomment-889431675|title=Multiple Interface Version Support|publisher=WoWUIBugs}}</ref>}} \n* {{Patch 9.0.1|note=[[MACRO reload|/reload]] recognizes changes to TOC metadata and entirely new files in the Interface/AddOns/ directory tree.}}\n* {{Patch 4.0.1|note=[[MACRO reload|/reload]] recognizes changes to the file order.}}\n* {{Patch 2.1.0|note=Added LoadManagers metadata}}\n* {{Patch 1.11.0|note=Added Secure metadata}}\n* {{Patch 1.9.0|note=Added LoadWith metadata}}\n\n===<font color=\"#4ec9b0\">Classic</font>===\n* {{Patch 5.5.0|note=Includes all changes present in patch 11.1.7.}}\n* {{Patch 4.4.1|note=Includes all changes present in patch 11.0.0.}}\n* {{Patch 4.4.0|note=Includes all changes present in patch 10.2.7. Additionally, the behavior of the <span class=\"apitype\">_Classic</span> TOC suffix has changed such that it now loads on all Classic clients, and not just Classic Era.}}\n\n===<font color=\"#4ec9b0\">Classic Era</font>===\n* {{Patch 1.15.4|note=Includes all changes present in patch 11.0.0.}}\n\n== See also ==\n* {{api|GetAddOnInfo}} returns basic information about an addon.\n* [[Using the AddOn namespace]] describes the parameters passed to each file.\n\n== References ==\n{{Reflist}}\n\n{{#invoke:API_info/navbox|main|Authoring}}"}}